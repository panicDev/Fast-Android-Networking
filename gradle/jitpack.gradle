group = 'com.github.panicDev'
version = '1.1.6'
afterEvaluate {
    if (plugins.hasPlugin('com.android.library')) {
        apply plugin: 'maven-publish'
        def buildType = "release"
        ext._jitpact_publish_task_name = ":${name}:publish${buildType.capitalize()}PublicationToMavenLocal"
        publishing {
            publications {
                "${buildType}"(MavenPublication) {
                    from components."${buildType}"
                    groupId = group
                    artifactId = "${project.name}"
                    version = project.version
                }
            }
        }

        afterEvaluate {
            def skippedTasks = [
                    "generate${buildType.capitalize()}BuildConfig",
            ]
            skippedTasks.forEach{ name ->
                tasks.named(name) { task->
                    task.enabled = false
                }
            }
        }
    }else {
        apply plugin: 'java'
        apply plugin: 'maven'

        task sourcesJar(type: Jar, dependsOn: classes) {
            archiveClassifier.set(project.provider { 'sources' })
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            archiveClassifier.set(project.provider { 'javadoc' })
            from javadoc.destinationDir
        }

        artifacts {
            archives sourcesJar
            archives javadocJar
        }
    }

}